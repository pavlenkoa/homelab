# ingress-nginx configuration for OrbStack cluster
# LoadBalancer service will be exposed by OrbStack automatically

controller:
  # Use LoadBalancer for standard ingress functionality
  service:
    type: LoadBalancer
    externalTrafficPolicy: Local

  # Enable additional features  
  enableAnnotationValidations: true
  
  # Metrics and monitoring (disabled for now - no Prometheus Operator installed)
  metrics:
    enabled: false

  # Resource limits for single-node cluster
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

  # High availability settings
  podDisruptionBudget:
    enabled: true
    minAvailable: 1

  # Replica count for availability
  replicaCount: 2

  # Anti-affinity for better distribution (optional for single node)
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
              - ingress-nginx
          topologyKey: kubernetes.io/hostname

  # Additional configuration
  config:
    # Enable real IP forwarding
    use-forwarded-headers: "true"
    compute-full-forwarded-for: "true"
    
    # SSL configuration
    ssl-protocols: "TLSv1.2 TLSv1.3"
    ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256,ECDHE-RSA-AES128-GCM-SHA256,ECDHE-ECDSA-AES256-GCM-SHA384,ECDHE-RSA-AES256-GCM-SHA384"
    
    # Performance tuning
    worker-processes: "auto"
    max-worker-connections: "16384"

# Default backend service
defaultBackend:
  enabled: true
  resources:
    limits:
      cpu: 50m
      memory: 64Mi
    requests:
      cpu: 10m
      memory: 20Mi

# Admission webhooks
admissionWebhooks:
  enabled: true
  resources:
    limits:
      cpu: 50m
      memory: 64Mi
    requests:
      cpu: 10m
      memory: 20Mi