# ArgoCD configuration for homelab cluster

# Bootstrap app-of-apps using extraObjects
extraObjects:
  - apiVersion: argoproj.io/v1alpha1
    kind: Application
    metadata:
      name: app-of-apps
      namespace: argocd
      finalizers:
        - resources-finalizer.argocd.argoproj.io
    spec:
      project: default
      source:
        repoURL: https://github.com/pavlenkoa/homelab.git
        targetRevision: HEAD
        path: kubernetes/app-of-apps
        helm:
          valueFiles:
            - values/homelab.yaml
      destination:
        server: https://kubernetes.default.svc
        namespace: argocd
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - "CreateNamespace=true"
          - "ServerSideApply=true"
          - "ServerSideDiff=true"
        retry:
          limit: 3
          backoff:
            duration: "5s"
            factor: 2
            maxDuration: "2m"

# Server configuration
server:
  service:
    type: NodePort
    nodePortHttp: 30081
    nodePortHttps: 30443
  
  # Disable internal TLS for simplicity in local setup
  insecure: true
  
  # ArgoCD configuration
  config:
    # Enable anonymous access for easier setup (can be disabled later)
    url: "http://localhost:30081"
    
    # Git repositories configuration
    repositories: |
      - type: git
        url: https://github.com/pavlenkoa/homelab.git
        name: homelab
    
    # Resource customizations
    resource.customizations: |
      argoproj.io/Application:
        health.lua: |
          hs = {}
          hs.status = "Progressing"
          hs.message = ""
          if obj.status ~= nil then
            if obj.status.health ~= nil then
              hs.status = obj.status.health.status
              if obj.status.health.message ~= nil then
                hs.message = obj.status.health.message
              end
            end
          end
          return hs
    
    
    # Global ignore differences for common Kubernetes normalization issues
    resource.customizations.ignoreDifferences.all: |
      jsonPointers:
      - /metadata/generation
      managedFieldsManagers:
      - kube-controller-manager
    
    # StatefulSet volumeClaimTemplates normalization  
    resource.customizations.ignoreDifferences.apps_StatefulSet: |
      jqPathExpressions:
      - .spec.volumeClaimTemplates[].apiVersion
      - .spec.volumeClaimTemplates[].kind
    
    # Webhook CA bundle changes (managed by cert-manager)
    resource.customizations.ignoreDifferences.admissionregistration.k8s.io_MutatingWebhookConfiguration: |
      jqPathExpressions:
      - .webhooks[]?.clientConfig.caBundle
    
    resource.customizations.ignoreDifferences.admissionregistration.k8s.io_ValidatingWebhookConfiguration: |
      jqPathExpressions:
      - .webhooks[]?.clientConfig.caBundle

# Controller configuration
controller:
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 256Mi

# Repo server configuration  
repoServer:
  resources:
    limits:
      memory: 256Mi
    requests:
      memory: 128Mi

# Application set controller
applicationSet:
  enabled: true
  resources:
    limits:
      memory: 128Mi
    requests:
      memory: 64Mi

# Notifications controller
notifications:
  enabled: false  # Can enable later for alerting

# Redis configuration
redis:
  resources:
    limits:
      memory: 128Mi
    requests:
      memory: 64Mi