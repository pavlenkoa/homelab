# External Secrets Operator configuration for homelab

# Install CRDs via Helm  
crds:
  create: true

# Concurrent secret fetches
concurrent: 3

# Resource limits for single-node cluster
resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 10m
    memory: 32Mi

webhook:
  resources:
    limits:
      cpu: 50m
      memory: 64Mi
    requests:
      cpu: 10m
      memory: 16Mi

certController:
  resources:
    limits:
      cpu: 50m
      memory: 64Mi
    requests:
      cpu: 10m
      memory: 16Mi

# Security context
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65534
  seccompProfile:
    type: RuntimeDefault

# Pod security context  
podSecurityContext:
  fsGroup: 65534

# Monitoring (disabled for now)
serviceMonitor:
  enabled: false

# Extra objects - Post-install job to create ClusterSecretStore after CRDs are ready
extraObjects:
  - |
    apiVersion: batch/v1
    kind: Job
    metadata:
      name: external-secrets-post-install
      namespace: external-secrets
      annotations:
        "helm.sh/hook": post-install,post-upgrade
        "helm.sh/hook-weight": "10"
        "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    spec:
      backoffLimit: 3
      template:
        spec:
          serviceAccountName: external-secrets
          restartPolicy: OnFailure
          containers:
            - name: create-clustersecretstore
              image: bitnami/kubectl:latest
              command:
                - sh
                - -c
                - |
                  echo "→ Waiting for external-secrets-operator to be ready..."
                  
                  # Wait for external-secrets deployment to be ready
                  timeout=300
                  elapsed=0
                  while true; do
                    if kubectl get deployment external-secrets -n external-secrets > /dev/null 2>&1; then
                      if kubectl rollout status deployment/external-secrets -n external-secrets --timeout=10s > /dev/null 2>&1; then
                        echo "✓ external-secrets deployment is ready"
                        break
                      fi
                    fi
                    if [ $elapsed -ge $timeout ]; then
                      echo "✗ Timeout waiting for external-secrets deployment"
                      exit 1
                    fi
                    echo "→ Waiting for external-secrets deployment... ($elapsed/$timeout seconds)"
                    sleep 5
                    elapsed=$((elapsed + 5))
                  done
                  
                  # Wait for CRDs to be available
                  echo "→ Waiting for ClusterSecretStore CRD to be available..."
                  timeout=60
                  elapsed=0
                  while true; do
                    if kubectl get crd clustersecretstores.external-secrets.io > /dev/null 2>&1; then
                      echo "✓ ClusterSecretStore CRD is available"
                      break
                    fi
                    if [ $elapsed -ge $timeout ]; then
                      echo "✗ Timeout waiting for ClusterSecretStore CRD"
                      exit 1
                    fi
                    echo "→ Waiting for CRD... ($elapsed/$timeout seconds)"
                    sleep 2
                    elapsed=$((elapsed + 2))
                  done
                  
                  # Check if ClusterSecretStore already exists
                  echo "→ Checking if vault-backend ClusterSecretStore exists..."
                  if kubectl get clustersecretstore vault-backend > /dev/null 2>&1; then
                    echo "✓ ClusterSecretStore already exists"
                    exit 0
                  fi
                  
                  echo "→ Creating vault-backend ClusterSecretStore..."
                  kubectl apply -f - <<EOF
                  apiVersion: external-secrets.io/v1beta1
                  kind: ClusterSecretStore
                  metadata:
                    name: vault-backend
                    labels:
                      app.kubernetes.io/managed-by: external-secrets-post-install
                  spec:
                    provider:
                      vault:
                        server: "http://vault.vault.svc.cluster.local:8200"
                        path: "kv"
                        version: "v2"
                        auth:
                          kubernetes:
                            mountPath: "kubernetes"
                            role: "external-secrets"
                            serviceAccountRef:
                              name: "external-secrets"
                              namespace: "external-secrets"
                  EOF
                  
                  if [ $? -eq 0 ]; then
                    echo "✓ ClusterSecretStore created successfully"
                  else
                    echo "✗ Failed to create ClusterSecretStore"
                    exit 1
                  fi
                  
                  echo "✓ Post-install configuration completed!"